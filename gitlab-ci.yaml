image: docker:stable

stages:
  - test
  - coverage report
  - build
  - deploy

variables:
  CACHE_DIR: "$CI_PROJECT_DIR/.cache"

cache:
  paths:
    - $CACHE_DIR

# -------------------------- WEB --------------------------

# test-web:
#   stage: test
#   image: node:14
#   script:
#     - cd Web/digital-booking-c3-e-1
#     - npm install
#     - npm run test
#   only:
#     - main

build-web:
  stage: build
  image: node:14
  script:
    - cd Web/digital-booking-c3-e-1
    - npm ci --cache $CACHE_DIR/node_modules --prefer-offline || npm install --cache $CACHE_DIR/node_modules
    - npm run build
  artifacts:
    paths:
      - Web/digital-booking-c3-e-1/dist/
  only:
    - main

deploy_to_s3:
  stage: deploy
  image: python:3
  before_script:
    - pip install awscli
    - aws configure set aws_access_key_id $AWS_ACCESS_KEY_ID
    - aws configure set aws_secret_access_key $AWS_SECRET_ACCESS_KEY
    - aws configure set region $AWS_DEFAULT_REGION
  script:
    - aws s3 rm s3://$S3_BUCKET_FRONTEND --recursive
    - aws s3 sync Web/digital-booking-c3-e-1/dist s3://$S3_BUCKET_FRONTEND --acl public-read
  only:
    - main


# -------------------------- API --------------------------

test-api:
  stage: test
  image: maven:3.6-jdk-11
  script:
    - cd API/digital-booking-c3-e-1
    - mvn clean test jacoco:prepare-agent jacoco:report
    - ls target/site/jacoco/
  artifacts:
    paths:
      - API/digital-booking-c3-e-1/target/surefire-reports/
      - API/digital-booking-c3-e-1/target/site/jacoco/
  only:
    - main@develop
    - changes
    - API/digital-booking-c3-e-1/**/*   

coverage-report:
  stage: coverage report
  image: maven:3.6-jdk-11
  script:
    - cd API/digital-booking-c3-e-1
    - mvn verify
    - cat target/site/jacoco/index.html | grep -o '<tfoot>.*</tfoot>'
  dependencies:
    - test-api
  coverage: '/Total.*?([0-9]{1,3})%/'
  artifacts:
    paths:
      - $CI_PROJECT_DIR/API/digital-booking-c3-e-1/target/site/jacoco/*
    reports:
      junit:
        - "**/target/surefire-reports/TEST-*.xml"
        #- "**/target/failsafe-reports/TEST-*.xml"

build-api:
  stage: build
  image: maven:3.6-jdk-11
  script:
    - cd API/digital-booking-c3-e-1
    - mvn clean package -DskipTests=true
  artifacts:
    paths:
      - API/digital-booking-c3-e-1/target/equipamiento-deportivo.jar
  only:
    - main@develop
    - changes
    - API/digital-booking-c3-e-1/**/*   

deploy_to_ec2:
  stage: deploy
  image: alpine:3.11
  before_script:
    - apk update && apk add openssh-client bash
    - mkdir -p ~/.ssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add - > /dev/null
    - touch ~/.ssh/config
    - echo -e "Host *\n\tStrictHostKeyChecking no\n\n" > ~/.ssh/config
    - ssh-keyscan -H $EC2_INSTANCE_IP >> ~/.ssh/known_hosts
  script:
    - ssh ubuntu@$EC2_INSTANCE_IP "sudo systemctl stop equipamiento-deportivo.service"
    - scp API/digital-booking-c3-e-1/target/equipamiento-deportivo.jar ubuntu@$EC2_INSTANCE_IP:~/equipamiento-deportivo/
    - ssh ubuntu@$EC2_INSTANCE_IP "sudo systemctl start equipamiento-deportivo.service"
  only:
    - main@develop
    - changes
    - API/digital-booking-c3-e-1/**/*   
